{"version":3,"sources":["components/CardCountry.js","mainPage.js","reportWebVitals.js","index.js"],"names":["CardCountry","alpha3Code","subregion","population","demonym","Card","MainPage","urlBase","useState","paisRandom","setPaisRandom","flagC","setFlagC","inputValue","setinputValue","dataCountry","setDataCountry","item","setItem","getRandomPais","a","axios","get","petitionByCode","data","flag","getDataPais","response","name","capital","region","alert","getEasyData","moreData","Math","floor","random","className","Button","variant","onClick","toString","src","onSubmit","e","preventDefault","TextField","id","label","type","value","onChange","target","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18454895.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\n\nexport const CardCountry = ({alpha3Code, subregion, population, demonym}) => {\n  return (\n    <Card>\n      <h2>{alpha3Code}</h2>\n      <p>{subregion}</p>\n      <p>{population}</p>\n      <p>{demonym}</p>\n    </Card>\n  )\n}\n\n\nexport default CardCountry;","import React, {useState} from 'react';\nimport { Button } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport Card from '@material-ui/core/Card';\nimport CardCountry from './components/CardCountry';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n\n\n\nconst MainPage = () => {\n\nconst urlBase = `https://restcountries.eu/rest/v2/`;\nconst maximun = 1;\nconst minimun = 372;\nconst minimunTwo = 250;\nconst random = () => Math.floor(Math.random()*(maximun - minimun)+ minimun);\nconst randomTwo = () => Math.floor(Math.random()*(maximun - minimunTwo)+ minimunTwo);\n\n  const [paisRandom, setPaisRandom] = useState('57');\n  const [flagC, setFlagC] = useState('https://restcountries.eu/data/col.svg');\n  const [inputValue, setinputValue] = useState('Colombia');\n  const [dataCountry, setDataCountry] = useState(['nombrePais', flagC, 'capital', 'region']);\n  const [item, setItem] = useState([]);\n  \n  const getRandomPais = async () => {\n\n    try {\n      const petitionByCode = await axios.get(`${urlBase}callingcode/${paisRandom}`);\n      setFlagC(petitionByCode.data.[0].flag);\n    }catch{\n      setFlagC('https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Uno_unpalogo.svg/1200px-Uno_unpalogo.svg.png');\n    }\n    \n  }\n\n  const getDataPais = async () => {\n\n    try{\n\n      const response = await axios.get(`${urlBase}name/${inputValue}?fullText=true`);\n      const {name, flag, capital, region} = await response.data.[0];\n      setDataCountry([name, flag, capital, region]);\n\n    }catch{\n      alert(`No se ha encontrado ningun resultado de ${inputValue}, por favor vuelva a intentarlo !`);\n    }\n  }\n\n  const getEasyData = async () => {\n\n    const moreData = await axios.get(`${urlBase}all`);\n      const {alpha3Code, subregion, population, demonym} = await moreData.data.[randomTwo()];\n      setItem([alpha3Code, subregion, population, demonym]);\n\n  }\n  \n  const handleClickRandom = () => {\n    setPaisRandom(random().toString())\n    getRandomPais();\n    getEasyData();\n  }\n\n  const handleInputChange = (e) => {\n    setinputValue(e.target.value);\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getDataPais();\n    \n\n  }\n  return (\n    <>\n      <div className=\"layoutcontainer\">\n        <header className=\"layoutcontainer__header\">\n          <h1 className=\"header__title\">Whale Jaguar</h1>\n          <div className=\"header__random\">\n            <Button variant=\"contained\" onClick={handleClickRandom}>Pais Aleatorio</Button>\n            <div className=\"random__container\"><img src={flagC}/></div>\n          </div>\n        </header>\n\n        <section className=\"layoutcontainer__main\">\n          <div className=\"main__search\">\n            <h2>Buscar Por Nombre de pais</h2>\n            <form  onSubmit={ handleSubmit }>\n              <TextField \n                id=\"filled-basic\" \n                label=\"Filled\" \n                variant=\"filled\" \n                type=\"text\"\n                value={ inputValue }\n                onChange={handleInputChange}\n              />\n              <div className=\"main__container\">\n                <Card className=\"search__card\">\n                  <h3 className=\"search__card--h3\">{dataCountry[0]}</h3>\n                  <img src={dataCountry[1]} />\n                  <p>{dataCountry[2]}</p>\n                  <p>{dataCountry[3]}</p>\n                </Card>\n              </div>\n            </form>\n          </div>\n          <div className=\"main__data\">\n            <h2> Representando datos de forma simple, Datos Tomados de un pais aleatoriamente</h2>\n            <CardCountry \n              alpha3Code={item[0]} \n              subregion={item[1]}\n              population={item[2]}\n              demonym={item[3]}\n            />\n            \n          </div>\n        </section>\n        \n        <footer className=\"layoutcontainer__footer\">\n          <div className=\"footer__github footer--a\"><GitHubIcon /><a href=\"https://github.com/andres22-dev/prueba-wj\">andres22-dev</a></div>\n          <div className=\"footer__twitter footer--a\"><TwitterIcon /><a href=\"https://twitter.com/andres22_dev\">@andres22_dev</a></div>\n        </footer>\n      </div>\n    </>\n  )\n}\n\n\nexport default MainPage;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainPage from './mainPage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}